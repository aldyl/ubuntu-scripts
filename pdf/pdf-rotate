#!/usr/bin/env bash
# --------------------------------------------
#  Rotate a PDF document
#
# Depends on :
#   * pdfjam (texlive-extra-utils)
#
#  Revision history :
#   05/05/2017, V1.0 - Creation by N. Bernaerts
#   01/05/2020, V1.1 - Use pdfam instead of pdf90, ...
#                      Adaptation for Ubuntu 20.04 LTS 
#   07/05/2020, V1.2 - Multiple files management 
# ---------------------------------------------------

# variable
ERROR=""

# if no argument, display help
if [ $# -eq 0 ] 
then
	echo "Tool to rotate PDF files"
	echo "Parameters are :"
	echo "  --right           Rotate 90 right"
	echo "  --left            Rotate 90 left"
	echo "  --updown          Rotate 180 (upside down)"
	echo "  <file1> <file2>   Files to rotate"
	exit 1
fi

# loop to retrieve arguments
while test $# -gt 0
do
	case "$1" in
		"--right") SUFFIX="right"; ANGLE="270"; shift; ;;
		"--left") SUFFIX="left"; ANGLE="90"; shift; ;;
		"--updown") SUFFIX="updown"; ANGLE="180"; shift; ;;
		*) ARR_FILE=( "${ARR_FILE[@]}" "$1" ); shift; ;;
	esac
done

# --------------------------
# check tools availability
# --------------------------

# check tools availability
command -v pdfjam >/dev/null 2>&1 || ERROR="Please install pdfjam [texlive-extra-utils]"

# generate temporary directory
TMP_DIR=$(mktemp -t -d "pdf-rotate-XXXXXXXX")
TMP_ORIGINAL="${TMP_DIR}/original.pdf"
TMP_ROTATE="${TMP_DIR}/rotate.pdf"
pushd "${TMP_DIR}"

# check at least one file is provided
NBR_FILE=${#ARR_FILE[@]}
[ "${ERROR}" = "" -a ${NBR_FILE} -eq 0 ] && ERROR="No file selected"

# check rotation is selected
[ "${ERROR}" = "" -a "${ANGLE}" = "" ] && ERROR="Please select a rotation (--right, --left or --updown)"

# --------------------
#   PDF repair
# --------------------

# loop thru image files
if [ "${ERROR}" = "" ] 
then
	(
	INDEX=0
	for ORIGINAL_URI in "${ARR_FILE[@]}"
	do
		# increment file index
		INDEX=$((INDEX+1))

		# generate filenames
		ORIGINAL_DIR=$(dirname "${ORIGINAL_URI}")
		ORIGINAL_FILE=$(basename "${ORIGINAL_URI}")
		ORIGINAL_NAME="${ORIGINAL_FILE%.*}"

		# copy input file to temporary folder
		echo "# ${INDEX} / ${NBR_FILE} - Copy of original PDF document ..."
		gio copy "${ORIGINAL_URI}" "${TMP_ORIGINAL}"
	
		# rotate PDF file
		echo "# ${INDEX} / ${NBR_FILE} - Rotate document ${SUFFIX} (${ANGLE}Â°) ..."
		pdfjam --fitpaper true --rotateoversize true --angle "${ANGLE}" --outfile "${TMP_ROTATE}" "${TMP_ORIGINAL}"

		# copy rotated file side to original 
		echo "# ${INDEX} / ${NBR_FILE} - Copy of rotated PDF ..."
		gio copy "${TMP_ROTATE}" "${ORIGINAL_DIR}/${ORIGINAL_NAME}-${SUFFIX}.pdf"
	done
	
	) | zenity --width=500 --height=25 --progress --pulsate --auto-close --title "Rotate PDF" --window-icon="/usr/share/icons/rotate-${SUFFIX}.png"
fi

# -------------------
#   End of operation
# -------------------

# display error message
[ "${ERROR}" != "" ] && zenity --error --width=300 --text="${ERROR}"

# remove temporary directory
popd
rm -r "${TMP_DIR}"

