#!/usr/bin/env bash
# ---------------------------------------------------
# Thumbnailer for RAW files
#
# Depends on :
#   * dcraw
#   * djpeg (libjpeg-turbo-progs package)
#   * pnmtopng and pnmscalefixed (netpbm package)
#
# Parameters :
#   $1 - path of RAW file
#   $2 - path of generated thumbnail
#   $3 - height of thumbnail in pixels
#
# Revision history :
#   12/08/2016, V1.0 - Creation by N. Bernaerts
#   07/10/2017, V1.1 - Conversion to URI and speedup with netpbm
#   15/12/2018, V1.2 - Rework for bubblewrap compatibility
# ---------------------------------------------------

# check tools availability 
command -v dcraw >/dev/null 2>&1 || { echo "[error] dcraw missing"; exit 1; }
command -v djpeg >/dev/null 2>&1 || { echo "[error] djpeg missing"; exit 1; }
command -v pnmtopng >/dev/null 2>&1 || { echo "[error] pnmtopng missing"; exit 1; }
command -v pnmscalefixed >/dev/null 2>&1 || { echo "[error] pnmscalefixed missing"; exit 1; }

# check params
[ "$3" = "" ] && { echo "[error] 3 params are needed : file file-thumb thumb-size"; exit 1; }

# get parameters
FILE_LOCAL="$1"
FILE_THUMB="$2"
SIZE="$3"

# generate temporary files and directory
TMP_DIR=$(mktemp -t -d "thumb-raw-XXXXXXXX")
TMP_PNM="${TMP_DIR}/original.pnm"
TMP_THUMB="${TMP_DIR}/thumbnail.pnm"

# try to extract JPG thumbnail embeded in RAW file
dcraw -c -e "${FILE_LOCAL}" > "${TMP_THUMB}"

# if thumbnail has been extracted
if [ -s "${TMP_THUMB}" ]
then
	# check if thumbnail is a JPEG file
	IS_JPEG=$(file -b "${TMP_THUMB}" | grep "^JPEG")

	# if thumbnail is JPEG, convert to PNM else use PNM thumbnail
	[ "${IS_JPEG}" != "" ] && djpeg "${TMP_THUMB}" > "${TMP_PNM}" || TMP_PNM="${TMP_THUMB}"

else
	# convert RAW picture to half size PNM with high speed options
	dcraw -c -h -q 0 "${FILE_LOCAL}" > "${TMP_PNM}"
fi

# convert PNM thumbnail to final thumbnail
pnmscalefixed -xysize ${SIZE} ${SIZE} "${TMP_PNM}" | pnmtopng -downscale -compression 0 - > "${FILE_THUMB}"

# remove temporary directory
rm -r "${TMP_DIR}"
